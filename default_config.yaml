# Builtin Configurations(DO NOT CHANGE THESE CONFIGURATIONS unless you know exactly what you are doing)
enable_modelarts: False
data_url: ""
train_url: ""
checkpoint_url: ""
data_path: "../data_mov/"
output_path: "/cache/train"
load_path: "/cache/checkpoint_path"
device_target: Ascend
enable_profiling: False

# ==============================================================================
#"""data config"""
data_vocab_size: 90437
train_num_of_parts: 21
test_num_of_parts: 3
batch_size: 4096
line_per_sample: 4096
data_field_size: 3
data_format: 1


#"""model config"""
data_emb_dim: 40
deep_layer_args: [[1024, 512, 256, 128], "relu"]
init_args: [-0.01, 0.01]
weight_bias_init: ['normal', 'normal']
keep_prob: 0.9
convert_dtype: True

# """train config"""
l2_coef: 0.00008 # 8e-5
learning_rate: 0.001 # 5e-4
epsilon: 0.00000005 # 0.00000005 # 5e-8
loss_scale: 1024.0
train_epochs: 75
save_checkpoint: True
ckpt_file_name_prefix: "deepfm_reloop"
save_checkpoint_steps: 1
keep_checkpoint_max: 3
eval_callback: True
loss_callback: True

# train.py 'CTR Prediction'
dataset_path: "./data_mov/mindrecord"
ckpt_path: "./results/ckpt"
eval_file_name: "./results/auc.log"
loss_file_name: "./results/loss.log"
do_eval: 'True'

# eval.py 'CTR Prediction'
checkpoint_path: "results/ckpt/deepfm_reloop-75_368.ckpt"

# export.py "deepfm export"
device_id: 0
ckpt_file: "/cache/train/deepfm-5-1_2582.ckpt"
file_name: "deepfm"
file_format: "MINDIR"

# 'preprocess.'
result_path: './preprocess_Result'

# 'postprocess'
# result_path: "./result_Files"
label_path: ''

# src/preprocess_data.py "Recommendation dataset"
# data_path: "./recommendation_dataset/"
dense_dim: 0
slot_dim: 3
threshold: 0
train_line_count: 1806173
skip_id_convert: 0

---
# Config description for each option
enable_modelarts: 'Whether training on modelarts, default: False'
data_url: 'Dataset url for obs'
train_url: 'Training output url for obs'
data_path: 'Dataset path for local'
output_path: 'Training output path for local'

device_target: "device target, support Ascend, GPU and CPU."
dataset_path: 'Dataset path'
batch_size: "batch size"
ckpt_path: 'Checkpoint path'
eval_file_name: 'Auc log file path. Default: "./auc.log"'
loss_file_name: 'Loss log file path. Default: "./loss.log"'
do_eval: 'Do evaluation or not, only support "True" or "False". Default: "True"'
checkpoint_path: 'Checkpoint file path'
device_id: "Device id"
ckpt_file: "Checkpoint file path."
file_name: "output file name."
file_format: "file format"
result_path: 'Result path'
# result_path: "./result_Files" # 'result path'
label_path: 'label path'

dense_dim: 'The number of your continues fields'
slot_dim: 'The number of your sparse fields, it can also be called catelogy features.'
threshold: 'Word frequency below this will be regarded as OOV. It aims to reduce the vocab size'
train_line_count: 'The number of examples in your dataset'
skip_id_convert: 'Skip the id convert, regarding the original id as the final id.'
---
device_target: ['Ascend', 'GPU', 'CPU']
file_format: ["AIR", "ONNX", "MINDIR"]
freeze_layer: ["", "none", "backbone"]
skip_id_convert: [0, 1]